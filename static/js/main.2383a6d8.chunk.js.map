{"version":3,"sources":["components/contactForm/ContactForm.module.css","components/contactList/ContactList.module.css","App.module.css","components/filter/Filter.module.css","services/contacts-api.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/contactList/ContactList.jsx","redux/contacts/contacts-actions.js","components/filter/Filter.jsx","components/contactForm/ContactForm.jsx","App.js","redux/contacts/contacts-reducers.js","redux/store.js","index.js"],"names":["module","exports","fetchContacts","a","axios","get","then","result","data","console","log","addContact","post","res","deleteContact","id","delete","defaults","baseURL","getAllContacts","createAsyncThunk","contacts","addContacts","contact","deleteContacts","contactId","getLoading","state","loading","getContacts","items","getFilter","filter","getVisibleContacts","normalizedFilter","toLowerCase","name","includes","toast","configure","ContactList","useSelector","dispatch","useDispatch","className","s","map","number","ContactListItem","ContactListSpan","btnDelete","type","onClick","autoClose","transition","Zoom","search_contact","createAction","Filter","seacrhInput","placeholder","value","onChange","e","target","ContactForm","useState","setName","setNumber","handleChange","onSubmit","preventDefault","warn","Bounce","contactsForm","label","input","autoComplete","pattern","title","required","contactsFormBtn","App","isLoadingContacts","useEffect","mainDiv","contactsActions","createReducer","fulfilled","_","payload","isLoading","pending","rejected","combineReducers","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","concat","logger","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2383a6d8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsForm\":\"ContactForm_contactsForm__3fjN8\",\"label\":\"ContactForm_label__3Q80s\",\"input\":\"ContactForm_input__18lPG\",\"contactsFormBtn\":\"ContactForm_contactsFormBtn__2WDUq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnDelete\":\"ContactList_btnDelete__ELVvi\",\"ContactListSpan\":\"ContactList_ContactListSpan__Cp03Y\",\"ContactList\":\"ContactList_ContactList__poPc0\",\"ContactListItem\":\"ContactList_ContactListItem__2VzHz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainDiv\":\"App_mainDiv__1U6Gv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"seacrhInput\":\"Filter_seacrhInput__1ssGw\"};","import axios from 'axios';\r\naxios.defaults.baseURL = 'https://61c318579cfb8f0017a3e968.mockapi.io/api/v1';\r\nexport async function fetchContacts() {\r\n  const data = await axios.get(`/contacts`).then(result => result.data);\r\n  console.log('data 1 all contacts');\r\n  return data;\r\n}\r\nexport async function addContact(data) {\r\n  console.log('data 2 add contacts');\r\n  return axios.post('/contacts', data).then(res => res.data);\r\n}\r\nexport async function deleteContact(id) {\r\n  console.log('data 3 deleted contacts');\r\n  return axios.delete(`/contacts/${id}`).then(res => res.data);\r\n}\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchContacts,\r\n  addContact,\r\n  deleteContact,\r\n} from '../../services/contacts-api';\r\nexport const getAllContacts = createAsyncThunk(\r\n  'contacts/fetchAllContacts',\r\n  async () => {\r\n    const contacts = await fetchContacts();\r\n    return contacts;\r\n  },\r\n);\r\nexport const addContacts = createAsyncThunk(\r\n  'contacts/addContact',\r\n  async contacts => {\r\n    const contact = await addContact(contacts);\r\n    return contact;\r\n  },\r\n);\r\nexport const deleteContacts = createAsyncThunk(\r\n  'contacts/deleteContact',\r\n  async contactId => {\r\n    const { id } = await deleteContact(contactId);\r\n    return id;\r\n  },\r\n);\r\n","export const getLoading = state => state.contacts.loading;\r\nexport const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\nexport const getVisibleContacts = state => {\r\n  const filter = state.contacts.filter;\r\n  const items = state.contacts.items;\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return items.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n","import s from './ContactList.module.css';\r\nimport { toast, Zoom } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { deleteContacts } from 'redux/contacts/contacts-operations';\r\nimport { getVisibleContacts } from '../../redux/contacts/contacts-selectors.js';\r\ntoast.configure();\r\nfunction ContactList() {\r\n  const data = useSelector(getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <ul className={s.ContactList}>\r\n      {data.map(({ id, name, number }) => {\r\n        return (\r\n          <li key={id} className={s.ContactListItem}>\r\n            <span className={s.ContactListSpan}>{name}</span>\r\n            <span className={s.ContactListSpan}>{number}</span>\r\n            <button\r\n              key={id}\r\n              className={s.btnDelete}\r\n              type=\"button\"\r\n              onClick={() => {\r\n                dispatch(deleteContacts(id));\r\n                toast('Deleted', { autoClose: 3000, transition: Zoom });\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\nexport default ContactList;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n// import shortid from 'shortid';\r\n// export const add_contact = createAction(\r\n//   'contacts/ADD_CONTACT',\r\n//   ({ name, number }) => ({\r\n//     payload: {\r\n//       id: shortid.generate(),\r\n//       name,\r\n//       number,\r\n//     },\r\n//   }),\r\n// );\r\n// export const delete_contact = createAction('contacts/DELETE_CONTACT');\r\nexport const search_contact = createAction('contacts/SEARCH_CONTACT');\r\n\r\n// export const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\n// export const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\n// export const fetchContactError = createAction('contacts/fetchContactError');\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilter } from '../../redux/contacts/contacts-selectors.js';\r\nimport { search_contact } from '../../redux/contacts/contacts-actions.js';\r\nimport s from './Filter.module.css';\r\nfunction Filter() {\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  const handleOnChange = e => {\r\n    dispatch(search_contact(e.target.value));\r\n  };\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <input\r\n        className={s.seacrhInput}\r\n        type=\"text\"\r\n        placeholder=\"Enter a name\"\r\n        value={filter}\r\n        onChange={handleOnChange}\r\n      />\r\n    </label>\r\n  );\r\n}\r\nexport default Filter;\r\n","import React, { useState } from 'react';\r\nimport { toast, Bounce } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport s from 'components/contactForm/ContactForm.module.css';\r\nimport { addContacts } from 'redux/contacts/contacts-operations.js';\r\nimport { getContacts } from 'redux/contacts/contacts-selectors.js';\r\ntoast.configure();\r\nfunction ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n  const handleChange = e => {\r\n    switch (e.target.name) {\r\n      case 'name':\r\n        setName(e.target.value);\r\n        break;\r\n      case 'number':\r\n        setNumber(e.target.value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    contacts.map(contact => contact.name).includes(name)\r\n      ? toast.warn(`${name} is already in your phonebook`, {\r\n          transition: Bounce,\r\n        })\r\n      : dispatch(addContacts({ name, number }));\r\n\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.contactsForm}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          autoComplete=\"off\"\r\n          onChange={handleChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n      <label className={s.label}>\r\n        Number\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          autoComplete=\"off\"\r\n          onChange={handleChange}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={s.contactsFormBtn}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\nexport default ContactForm;\r\n","import React, { useEffect } from 'react';\r\nimport s from './App.module.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ContactList from './components/contactList/ContactList';\r\nimport Filter from './components/filter/Filter';\r\nimport ContactForm from './components/contactForm/ContactForm';\r\nimport { getAllContacts } from 'redux/contacts/contacts-operations';\r\nimport { getLoading } from './redux/contacts/contacts-selectors';\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const isLoadingContacts = useSelector(getLoading);\r\n  useEffect(() => {\r\n    dispatch(getAllContacts());\r\n  }, [dispatch]);\r\n  return (\r\n    <div className={s.mainDiv}>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n      {isLoadingContacts && <h2>downloading...</h2>}\r\n      {!isLoadingContacts && (\r\n        <>\r\n          <h2>Contacts</h2>\r\n          <Filter />\r\n          <ContactList />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport * as contactsActions from './contacts-actions';\r\nimport {\r\n  getAllContacts,\r\n  addContacts,\r\n  deleteContacts,\r\n} from './contacts-operations';\r\nconst { search_contact } = contactsActions;\r\nconst items = createReducer([], {\r\n  [getAllContacts.fulfilled]: (_, { payload }) => payload,\r\n  [addContacts.fulfilled]: (state, { payload }) => {\r\n    return [...state, payload];\r\n  },\r\n  [deleteContacts.fulfilled]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\nconst filter = createReducer('', {\r\n  [search_contact]: (_, { payload }) => payload,\r\n});\r\nconst isLoading = createReducer(false, {\r\n  [getAllContacts.pending]: () => true,\r\n  [getAllContacts.fulfilled]: () => false,\r\n  [getAllContacts.rejected]: () => false,\r\n  [addContacts.pending]: () => true,\r\n  [addContacts.fulfilled]: () => false,\r\n  [addContacts.rejected]: () => false,\r\n  [deleteContacts.pending]: () => true,\r\n  [deleteContacts.fulfilled]: () => false,\r\n  [deleteContacts.rejected]: () => false,\r\n});\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  isLoading,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport reducer from './contacts/contacts-reducers.js';\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: reducer,\r\n  },\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({ serializableCheck: false }).concat(logger),\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './redux/store';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n    ;\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}